@startuml manage-review

header Review Sequence Diagram
footer Page %page% of %lastpage%
title "Manage Review (Get All Review)"

participant "Client" as client
participant "<<javaScript>>\n:server" as server
participant "<<routes>>\n:reviews" as routerReviews
participant "<<middleware>>\n:auth" as middlewareAuth
participant "<<controllers>>\n:reviews" as controllersReviews
participant "<<models>>\n:Review" as modelReview
participant "<<models>>\n:Campground" as modelCampground
database "<<MongoDB>>\n:reviews" as ReviewsDatabase

alt Get All Reviews
    client->server ++: req.get('/api/v1/reviews')
    server->routerReviews ++: app.use('/reviews', reviews)
end

routerReviews -> controllersReviews ++: getReviews()

alt Query Processing
    controllersReviews -> modelReview ++: Review.find()
else Query Processing with Select
    controllersReviews -> modelReview ++: Review.find().select(req.query.select)
end

alt Query Processing with Sort
    controllersReviews -> modelReview ++: sort(req.query.sort)
else No Sorting
    controllersReviews -> modelReview ++: sort('-rating')
end

alt Pagination
    controllersReviews -> modelReview ++: skip(startIndex).limit(limit)
end

modelReview -> ReviewsDatabase ++: ReviewSchema
ReviewsDatabase --> modelReview --: Reviews
controllersReviews -> modelReview ++: populate({ path: 'campground', select: 'name address tel' })
modelReview --> controllersReviews --: Populated Review Data
controllersReviews->client --: response (All Reviews)

@enduml
